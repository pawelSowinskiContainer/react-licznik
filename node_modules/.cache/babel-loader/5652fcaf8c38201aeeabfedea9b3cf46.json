{"ast":null,"code":"var _jsxFileName = \"/Users/pawelsowinski/Desktop/akademia_108/counter/src/components/conuter.jsx\";\nimport React from 'react';\nimport './counter.css';\nimport ButtonsPanel from './buttonsPanels';\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.resetCounter = resetCounter => {\n      let initValue = 0;\n\n      if (!resetCounter) {\n        if (!isNaN(this.props.initValue)) {\n          initValue = parseInt(this.props.initValue);\n        }\n      }\n\n      this.setState({\n        counterValue: initValue\n      });\n    };\n\n    this.changeValue = () => {\n      this.setState({\n        counterValue: this.state.counterValue + 1\n      });\n    };\n\n    let _initValue = 0;\n\n    if (!isNaN(this.props.initValue)) {\n      _initValue = parseInt(this.props.initValue);\n    }\n\n    this.state = {\n      counterValue: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Licznik:\", React.createElement(\"span\", {\n      className: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.counterValue), React.createElement(ButtonsPanel, {\n      changeValue: this.changeValue,\n      resetCounterValue: this.resetCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default Counter;","map":{"version":3,"sources":["/Users/pawelsowinski/Desktop/akademia_108/counter/src/components/conuter.jsx"],"names":["React","ButtonsPanel","Counter","Component","constructor","props","resetCounter","initValue","isNaN","parseInt","setState","counterValue","changeValue","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,YAZmB,GAYHA,YAAD,IAAkB;AAC7B,UAAIC,SAAS,GAAG,CAAhB;;AAEA,UAAG,CAACD,YAAJ,EAAkB;AACd,YAAK,CAACE,KAAK,CAAC,KAAKH,KAAL,CAAWE,SAAZ,CAAX,EAAmC;AAC/BA,UAAAA,SAAS,GAAGE,QAAQ,CAAC,KAAKJ,KAAL,CAAWE,SAAZ,CAApB;AACH;AACJ;;AACD,WAAKG,QAAL,CAAc;AACVC,QAAAA,YAAY,EAAEJ;AADJ,OAAd;AAGH,KAvBkB;;AAAA,SAgCnBK,WAhCmB,GAgCL,MAAM;AAChB,WAAKF,QAAL,CAAc;AACVC,QAAAA,YAAY,EAAE,KAAKE,KAAL,CAAWF,YAAX,GAA0B;AAD9B,OAAd;AAGH,KApCkB;;AAGf,QAAIJ,UAAS,GAAG,CAAhB;;AACA,QAAI,CAAEC,KAAK,CAAC,KAAKH,KAAL,CAAWE,SAAZ,CAAX,EAAmC;AAC/BA,MAAAA,UAAS,GAAGE,QAAQ,CAAC,KAAKJ,KAAL,CAAWE,SAAZ,CAApB;AACH;;AACD,SAAKM,KAAL,GAAa;AACTF,MAAAA,YAAY,EAAE;AADL,KAAb;AAGH;;AA4BDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEI;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,KAAKD,KAAL,CAAWF,YAApC,CAFJ,EAGI,oBAAC,YAAD;AAAc,MAAA,WAAW,EAAE,KAAKC,WAAhC;AAA6C,MAAA,iBAAiB,EAAE,KAAKN,YAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AAhDiC;;AAiDrC;AAED,eAAeJ,OAAf","sourcesContent":["import React from 'react';\nimport './counter.css';\nimport ButtonsPanel from './buttonsPanels';\n\nclass Counter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        let initValue = 0;\n        if (! isNaN(this.props.initValue)) {\n            initValue = parseInt(this.props.initValue);\n        }\n        this.state = {\n            counterValue: 0,\n        }\n    }\n\n    resetCounter = (resetCounter) => {\n        let initValue = 0\n\n        if(!resetCounter) {\n            if ( !isNaN(this.props.initValue)) {\n                initValue = parseInt(this.props.initValue);\n            }\n        }\n        this.setState({\n            counterValue: initValue\n        })\n    }\n    // changeValue = () => {\n    //     this.setState((prevState) => {\n    //         return ({\n    //             counterValue: prevState.counterValue + 1,\n    //         })\n    //     })\n    // } na dwa sposoby mozna.\n\n    changeValue = () => {\n        this.setState({\n            counterValue: this.state.counterValue + 1,\n        })\n    }\n    \n    render() {\n        return(\n            <div className=\"counter\">\n                Licznik:\n                <span className=\"value\">{this.state.counterValue}</span>\n                <ButtonsPanel changeValue={this.changeValue} resetCounterValue={this.resetCounter}/>\n            </div>\n        )\n    }\n};\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}